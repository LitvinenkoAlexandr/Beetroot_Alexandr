#Дан список чисел L. Написать функцию, которая вернет True если сумма первых 4 элементов списка равны 9. 
#При этом функция должна вызываться только если длина списка больше 4.

L = input("Введите числа через запятую")
print(L.split(","))

def func(L):
	L = list(map(int, L))
	print(L)
	if sum(L)== 9:
		print("True")
if len(L) > 4:
	func(L)

#Написать функцию, которая будет возвращать True если в списке, который передается функции как аргумент присутствует последовательность чисел 1, 2, 3, 4

E = [1, 2, 3, 4]

def func(E):
	if E.superset({1, 2, 3, 4}) in E:
		print("True!") 

func(E)

#Написать функцию, которая принимает список как аргумент и возвращает True если первый и последний элемент в списке равен 6

sp = [6, 7, 8, 6]

def func(sp):
	if (sp[0]) and (sp[-1]) == 6:
		print("True!!")

func(sp)
#Написать функцию, которая принимает 2 списка и возвращает True если первые или последние элементы списка равны

a = set([1, 2, 3, 9, 6, 7])
b = set([1,2,4,5,6,7])

def func(a, b):
	if a.intersection(b):
		print(a.intersection(b))
		print("It is True")
func(a, b)

#Написать функцию, которая принимает 3 списка и возвращает их общую сумму элементов
set1 = {2, 4, 5, 6}  
set2 = {4, 6, 7, 8}  
set3 = {7, 8, 9, 10} 
 
def func():
	set1.union(set2, set3)
	print(set1.union(set2, set3))
func()

#Перевернуть список: [1,2,3,4] => [4,3,2,1]

c = [1,2,3,4]
c.reverse()
print(c)

#Определить самый большой элемент списка и заменить им все элементы. Длина списка не больше 5

#t = [10, 20, 30, 40, 50]
#print(max(t))
#t.discard(10, 20, 30, 40, 50)
#print(t)		#Доделать

#Написать функцию, которая вернет сумму первых 2 элементов в списке. Если длина списка меньше 2, просто суммируйте существующие элементы, возвращая 0, если массив имеет длину 0.
#Сделать



#9)	Дано 2 списка int, a и b, длина каждого равна 3.Написать функцию, которая принимает оба списка и возвращает новый список длиной 2, содержащий их средние элементы.

#a = [1, 2, 3]
#b = [4, 5, 6]

